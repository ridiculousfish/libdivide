# Automated Windows and Linux testing using appveyor.com
# https://ci.appveyor.com/projects

version: '{branch}-{build}'

image:
- Ubuntu1804
- Visual Studio 2017
- Visual Studio 2019

platform:
  - x86
  - x64

for:
  - matrix:
      only:
        - image: Ubuntu1804
          platform: x86
    environment:
      CFLAGS: "-Wall -Wextra -pedantic -Werror -O1 -g -fsanitize=address -fsanitize=undefined -fno-sanitize-recover=all -fno-omit-frame-pointer"
      CXXFLAGS: "-Wall -Wextra -pedantic -Werror -O1 -g -fsanitize=address -fsanitize=undefined -fno-sanitize-recover=all -fno-omit-frame-pointer"
    install:
      - sudo apt install --yes cppcheck
    build_script:
      - cmake . -DCMAKE_BUILD_TYPE=Debug
      - make VERBOSE=1
    test_script:
      - cppcheck . --error-exitcode=1 --force -i doc
      - ./tester
      - ./benchmark_branchfree
      - ./test_c99

  - matrix:
      only:
        - image: Ubuntu1804
          platform: x64
    environment:
      CFLAGS: "-Wall -Wextra -pedantic -Werror -O1 -g -fsanitize=address -fsanitize=undefined -fno-sanitize-recover=all -fno-omit-frame-pointer"
      CXXFLAGS: "-Wall -Wextra -pedantic -Werror -O1 -g -fsanitize=address -fsanitize=undefined -fno-sanitize-recover=all -fno-omit-frame-pointer"
    install:
      - sudo apt install --yes cppcheck
    build_script:
      - CC=clang CXX=clang++ cmake . -DCMAKE_BUILD_TYPE=Debug
      - make VERBOSE=1
    test_script:
      - cppcheck . --error-exitcode=1 --force -i doc
      - ./tester
      - ./benchmark_branchfree
      - ./test_c99

  - matrix:
      only:
        - image: Visual Studio 2017
          platform: x86
    build_script:
      - cmake . -G "Visual Studio 15 2017"
      - cmake --build . --config Release
    test_script:
      - cd Release
      - tester.exe
      - benchmark_branchfree.exe
      - test_c99.exe

  - matrix:
      only:
        - image: Visual Studio 2017
          platform: x64
    environment:
      CFLAGS: "/W3 /WX /DLIBDIVIDE_ASSERTIONS_ON"
      CXXFLAGS: "/W3 /WX /DLIBDIVIDE_ASSERTIONS_ON"
    build_script:
      - cmake . -G "Visual Studio 15 2017 Win64"
      - cmake --build . --config Release
    test_script:
      - cd Release
      - tester.exe
      - benchmark_branchfree.exe
      - test_c99.exe

  - matrix:
      only:
        - image: Visual Studio 2019
          platform: x86
    build_script:
      - cmake . -G "Visual Studio 16 2019"
      - cmake --build . --config Release
    test_script:
      - cd Release
      - tester.exe
      - benchmark_branchfree.exe
      - test_c99.exe

  - matrix:
      only:
        - image: Visual Studio 2019
          platform: x64
    environment:
      CFLAGS: "/W3 /WX /DLIBDIVIDE_ASSERTIONS_ON"
      CXXFLAGS: "/W3 /WX /DLIBDIVIDE_ASSERTIONS_ON"
    install:
      - cmd: SET PATH=C:\Python39;C:\Python39\Scripts;%PATH%
      - cmd: pip install -U platformio
      - cmd: pio platform install atmelavr --with-package=tool-simavr
    build_script:
      - cmake . -G "Visual Studio 16 2019"
      - cmake --build . --config Release
      - cd test/avr
      - ps: Get-Content -Path .\platformio.ini | Where-Object { $_.StartsWith("[env:") } | ForEach-Object { & pio run -e $_.SubString(5, $_.Length-6) }
      - cd ../..
    test_script:
      # Important check for AVR - static + inline
      - ps: Select-String -Path "libdivide.h" "static [^L]" -AllMatches | ForEach-Object { Write-Error ("Static but not line - " + $_) }
      - cd Release
      - tester.exe
      - benchmark_branchfree.exe
      - test_c99.exe
      - cd ../test/avr
      - pio run -t Simulate -e megaatmega2560_Test
